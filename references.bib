@book{10.5555/2490781,
author = {Silberschatz, Abraham and Galvin, Peter B. and Gagne, Greg},
title = {Operating System Concepts},
year = {2012},
isbn = {1118063333},
publisher = {Wiley Publishing},
edition = {9th},
abstract = {The ninth edition of Operating System Concepts continues to evolve to provide a solid theoretical foundation for understanding operating systems. This edition has been updated with more extensive coverage of the most current topics and applications, improved conceptual coverage and additional content to bridge the gap between concepts and actual implementations. A new design allows for easier navigation and enhances reader motivation. Additional end-of-chapter, exercises, review questions, and programming exercises help to further reinforce important concepts. WileyPLUS, including a test bank, self-check exercises, and a student solutions manual, is also part of the comprehensive support package.}
}

@inproceedings{10.1145/1463822.1463838,
author = {Conway, Melvin E.},
title = {A Multiprocessor System Design},
year = {1963},
isbn = {9781450378833},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1463822.1463838},
doi = {10.1145/1463822.1463838},
abstract = {Parallel processing is not so mysterious a concept as the dearth of algorithms which explicitly use it might suggest. As a rule of thumb, if N processes are performed and the outcome is independent of the order in which their steps are executed, provided that within each process the order of steps is preserved, then any or all of the processes can be performed simultaneously, if conflicts arising from multiple access to common storage can be resolved. All the elements of a matrix sum may be evaluated in parallel. The ith summand of all elements of a matrix product may be computed simultaneously. In an internal merge sort all strings in any pass may be created at the same time. All the coroutines of a separable program may be run concurrently.},
booktitle = {Proceedings of the November 12-14, 1963, Fall Joint Computer Conference},
pages = {139–146},
numpages = {8},
location = {Las Vegas, Nevada},
series = {AFIPS '63 (Fall)}
}

@online{noauthor_job_2021,
	title = {Job scheduling game},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Job_scheduling_game&oldid=1004213597},
	abstract = {In game theory, a job scheduling game is a game that models a scenario in which multiple selfish users wish to utilize multiple processing machines. Each user has a single job, and he needs to choose a single machine to process it. The incentive of each user is to have his job run as fast as possible.},
	language = {en},
	urldate = {2023-01-20},
	journal = {Wikipedia},
	month = feb,
	year = {2021},
	note = {Page Version ID: 1004213597},
}

@inproceedings{9244046,
author={Premi, Lara and Reghenzani, Federico and Massari, Giuseppe and Fornaciari, William},
booktitle={2020 International Conference on Embedded Software (EMSOFT)}, 
title={A Game Theory Approach to Heterogeneous Resource Management: Work-in-Progress}, 
year={2020},
volume={},
number={},
pages={25-27},
doi={10.1109/EMSOFT51651.2020.9244046}
}

@inproceedings{10.1145/2639108.2639128,
author = {Dong, Mian and Lan, Tian and Zhong, Lin},
title = {Rethink Energy Accounting with Cooperative Game Theory},
year = {2014},
isbn = {9781450327831},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2639108.2639128},
doi = {10.1145/2639108.2639128},
abstract = {Energy accounting determines how much a software principal contributes to the total system energy consumption. It is the foundation for evaluating software and for operating system based energy management. While various energy accounting policies have been tried, there is no known way to evaluate them directly simply because it is hard to track all hardware usage by software in a heterogeneous multicore system like modern smartphones and tablets.In this work, we argue that energy accounting should be formulated as a cooperative game and that the Shapley value provides the ultimate ground truth for energy accounting policies. We reveal the important flaws of existing energy accounting policies based on the Shapley value theory and provide Shapley value-based energy accounting, a practical approximation of the Shapley value, for battery-powered mobile systems. We evaluate this approximation against existing energy accounting policies in two ways: (i) how well they identify the top energy consuming applications, and (ii) how effective they are in system energy management. Using a prototype based on Texas Instruments Pandaboard and smartphone workload, we experimentally demonstrate existing energy accounting policies can deviate by 400% in attributing energy consumption to running applications and can be up to 25% less effective in system energy management when compared to Shapley value-based energy accounting.},
booktitle = {Proceedings of the 20th Annual International Conference on Mobile Computing and Networking},
pages = {531–542},
numpages = {12},
keywords = {energy management, mobile systems, energy accounting},
location = {Maui, Hawaii, USA},
series = {MobiCom '14}
}

% ref 6
@ARTICLE{7425237,
author={Yang, Bo and Li, Zhiyong and Chen, Shaomiao and Wang, Tao and Li, Keqin},
journal={IEEE Transactions on Parallel and Distributed Systems}, 
title={Stackelberg Game Approach for Energy-Aware Resource Allocation in Data Centers}, 
year={2016},
volume={27},
number={12},
pages={3646-3658},
doi={10.1109/TPDS.2016.2537809}
}

% ref 7
@inproceedings{10.1007/978-1-4614-7010-6_33,
author="Song, Ge
and Yu, Lei
and Meng, Zide
and Lin, Xuelian",
editor="Wong, W. Eric
and Ma, Tinghuai",
title="A Game Theory Based MapReduce Scheduling Algorithm",
booktitle="Emerging Technologies for Information Systems, Computing, and Management",
year="2013",
publisher="Springer New York",
address="New York, NY",
pages="287--296",
abstract="A Hadoop MapReduce cluster is an environment where multi-users, multi-jobs and multi-tasks share the same physical resources. Because of the competitive relationship among the jobs, we need to select the most suitable job to be sent to the cluster. In this paper we consider this problem as a two-level scheduling problem based on a detailed cost model. Then we abstract these scheduling problems into two games. And we solve these games in using some methods of game theory to achieve the solution. Our strategy improves the utilization efficiency of each type of the resources. And it can also avoid the unnecessary transmission of data.",
isbn="978-1-4614-7010-6"
}

@article{rosenthal_class_1973,
	title = {A class of games possessing pure-strategy {Nash} equilibria},
	volume = {2},
	issn = {1432-1270},
	url = {https://doi.org/10.1007/BF01737559},
	doi = {10.1007/BF01737559},
	abstract = {A class of noncooperative games (of interest in certain applications) is described. Each game in the class is shown to possess at least one Nash equilibrium in pure strategies.},
	language = {en},
	number = {1},
	urldate = {2023-01-20},
	journal = {International Journal of Game Theory},
	author = {Rosenthal, Robert W.},
	month = {dec},
	year = {1973},
	keywords = {Nash Equilibrium, Economic Theory, Game Theory, Pure Strategy, Noncooperative Game},
	pages = {65--67},
}

@inproceedings{10.1145/1807406.1807411,
author = {Scarsini, Marco and Tomala, Tristan},
title = {Repeated Congestion Games with Bounded Rationality},
year = {2010},
isbn = {9781605589190},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1807406.1807411},
doi = {10.1145/1807406.1807411},
abstract = {This paper studies a transportation model where commuters repeatedly travel from a common source to a common destination. This situation is framed as a repeated routing game with single source-destination pair. We show that a form of the well known folk theorem applies in this setting, namely that a Pareto-optimal outcome may result from selfish behavior, provided that agents are far-sighted and minimize their average transportation cost over time. Our main contribution is to prove this result under the realistic assumption of imperfect monitoring: agents do not observe one another's actions, rather, they get an aggregated signal. We examine two versions: a public monitoring setting where agents observe the flow in the network, and a private monitoring version where agents observe the cost that they pay on each edge of the network. Finally we compute the strategic complexity of the equilibrium strategies.},
booktitle = {Proceedings of the Behavioral and Quantitative Game Theory: Conference on Future Directions},
articleno = {5},
numpages = {1},
location = {Newport Beach, California},
series = {BQGT '10}
}
